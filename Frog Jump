https://www.naukri.com/code360/problems/frog-jump_3621012


Recursion

TLE
int frogJumps(int n,int idx, vector<int> &heights){

    // also the question is to reach last stone, so dont include 
    // last stone

    if(idx>=n-1) return 0;

    int oneStep= INT_MAX;
    int twoSteps = INT_MAX;


    if(idx+1<n)
       oneStep =  abs(heights[idx] - heights[idx+1]) + frogJumps(n,idx+1,heights);
    
    if(idx+2<n)
       twoSteps = abs(heights[idx] - heights[idx+2]) + frogJumps(n,idx+2,heights) ;

    return min(oneStep, twoSteps);

    
}

int frogJump(int n, vector<int> &heights)
{
    // Write your code here.

    return frogJumps(n,0,heights);



}







#include <bits/stdc++.h> 


int dp[100001];

int frogJump(int n, vector<int> &heights)
{
    // Write your code here.

    memset(dp, -1,sizeof(dp));

    dp[0] =0;

    for(int i=1;i<n;i++){

        int onestep = dp[i-1] + abs(heights[i-1] - heights[i]);

        int twosteps = INT_MAX;

        if(i>1)
          twosteps = dp[i-2] + abs(heights[i-2] - heights[i]);

      dp[i] = min(onestep,twosteps);

    }
     return dp[n-1]; 


}
