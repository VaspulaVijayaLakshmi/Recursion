class Solution {
public:
    int minDistance(string text1, string text2) {

        int n1 = text1.size();
        int n2 = text2.size();

        // n1 on x-axis
        // n2 on y-axis

       vector<vector<int>> dp(n1+1,vector<int>(n2+1,0));

      for(int i=1;i<=n1;i++){
        for(int j=1;j<=n2;j++){

            if(text1[i-1] == text2[j-1])
              dp[i][j] = dp[i-1][j-1] + 1;

			
            else 
			 dp[i][j] = max(dp[i-1][j], dp[i][j-1]);
			}
            
        }

       int lcsCount = dp[n1][n2];

        int del1 = n1 - lcsCount;
        int del2 = n2 - lcsCount;

        
       return del1+del2; 

        
    }
};


// word1 = "sea", 
// word2 = "eat"

// comon subseq - so 2 elements are equal

// so we need to remove "sea" - "ea" - delete 1 char
// so we need to remove "eat" - "ea" - delete 1 char
