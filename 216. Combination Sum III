// duplicates would be there, so sort the array and skip the duplicates

class Solution {
public:
    void helper(int idx, int target, vector<int> &candidates, vector<vector<int>> &res, vector<int> &temp,int k){
        
          if(idx==candidates.size()){

            if(target==0 && temp.size()==k)
             res.push_back(temp);

            return ;
          }

          if(candidates[idx]<=target){

            temp.push_back(candidates[idx]);
            helper(idx+1,target-candidates[idx],candidates,res,temp,k);
            temp.pop_back();

          }

          helper(idx+1,target,candidates,res,temp,k);

        }
        

    vector<vector<int>> combinationSum3(int k, int target) {
       
        vector<int> candidates;
        for(int i=1;i<=9;i++)
          candidates.push_back(i);


        vector<int> temp;
        vector<vector<int>> ans;
        helper(0, target, candidates, ans, temp,k);

        return ans;
    }
};
