there's another appraoch

https://www.youtube.com/watch?v=RoEzdG1bB9s&list=PLpIkg8OmuX-KJPC18SGiRUzJQAYo839ox&index=13



class Solution {
public:
bool check (vector<int> & a, int k ){
    int n=a.size();
    for (int i=0;i<n;i++){
        for (int j=i+1; j<n;j++){
            if (abs(a[i]-a[j])==k) return false;
        }
    }
    return true;
}
void f(vector<int> & ans, int & count, vector<int> & nums, int k , int i ){
    int n=nums.size();
    if (i==n){
        if (check(ans, k )){
            count++;
        }
        return;

    }

    // take 
    ans.push_back(nums[i]);
    f(ans, count,nums,k, i+1);

    // dont take

    ans.pop_back();
    f(ans, count, nums, k, i+1);

}
    int beautifulSubsets(vector<int>& nums, int k) {
        vector<int> ans;
        int count=0;
        f(ans, count, nums, k , 0 );
        return count-1;
        
    }
};
